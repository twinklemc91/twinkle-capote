(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var URL_BARSDATA = 'https://pb-api.herokuapp.com/bars';

document.addEventListener('DOMContentLoaded', function () {
	var barsData = null;

	fetchBarsData(URL_BARSDATA, init);

	function init(data) {
		barsData = data;

		if (barsData) {
			generateProgressBarsSelect();
			generateButtons();
		} else {
			document.querySelector('#contents-bars').innerText = 'Unable to load data';
		}
	}

	function fetchBarsData(url, callback) {
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function () {
			if (this.readyState == 4 && this.status == 200) {
				var dataJson = JSON.parse(this.responseText);
				callback(dataJson);
			}
		};
		xmlhttp.open("GET", url, true);
		xmlhttp.send();
	}

	function generateProgressBarsSelect() {
		var barsHtml = '',
		    selectHtml = '',
		    barsJson = barsData.bars,
		    limit = barsData.limit;

		for (var i = 0; i < barsJson.length; i++) {
			var width = Math.round(barsJson[i] / limit * 100);
			barsHtml += '<div class="progress animated fadeIn">\n\t\t\t\t\t<div id="progress' + (i + 1) + '" class="progress-bar" role="progressbar" style="width:' + width + '%;" aria-valuenow="' + width + '" aria-valuemin="0" aria-valuemax="100">\n\t\t\t\t\t\t<span id="progress' + (i + 1) + '-value">' + width + '%</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>';

			selectHtml += '<option value="progress' + (i + 1) + '">#progress' + (i + 1) + '</option>';
		}

		document.querySelector('#contents-bars').innerHTML = barsHtml;
		document.querySelector('#select-progressbar').innerHTML = selectHtml;
		document.querySelector('#select-progressbar').selectedIndex = '0';
	}

	function generateButtons() {
		var buttonsHtml = '',
		    buttonsJson = barsData.buttons.sort(sortAsc);

		// Render buttons
		for (var i = 0; i < buttonsJson.length; i++) {
			var value = buttonsJson[i] < 0 ? buttonsJson[i] : '+' + buttonsJson[i];
			buttonsHtml += '<button id="button' + (i + 1) + '" type="button" class="btn btn-default btn-sm" value="' + buttonsJson[i] + '">' + value + '</button>';
		}
		document.querySelector('#contents-btn').innerHTML = buttonsHtml;

		// Add click listeners
		for (var _i = 0; _i < buttonsJson.length; _i++) {
			document.querySelector('#button' + (_i + 1)).addEventListener('click', setClickEvent);
		}
	}

	function setClickEvent(e) {
		var selectedId = document.querySelector('#select-progressbar').value;
		var selectedProgressBar = document.querySelector('#' + selectedId);
		var barValue = parseInt(selectedProgressBar.style.width.replace('%', ''));
		var value = parseInt(e.currentTarget.value);

		barValue += value;

		if (barValue > 100) {
			selectedProgressBar.classList.add('bg-danger');
		} else {
			selectedProgressBar.classList.remove('bg-danger');
		}

		selectedProgressBar.style.width = barValue < 0 ? '0%' : barValue + '%';
		selectedProgressBar.value = barValue;
		document.querySelector('#' + selectedId + '-value').innerText = selectedProgressBar.style.width;
	}

	function sortAsc(a, b) {
		return a - b;
	}
});

},{}]},{},[1]);
